spring:
  datasource:
    url: jdbc:postgresql://${POSTGRES_DB_SERVER_ADDRESS:localhost}:${POSTGRES_DB_SERVER_PORT:5432}/
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:example}

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create
      show-sql: true
      format-sql: true
      type: info
      use-sql-comments: true
      properties:
        hibernate.use_sql_comments: true
        hibernate.format_sql: true
  kafka:
    bootstrap-servers: localhost:9092 # Default, can be changed
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false # To avoid adding __TypeId__ headers
    template:
      default-topic: user-events # Default topic, can be changed

springdoc:
  show-actuator: true
  paths-to-match: /**
  packages-to-scan: com.farukgenc.boilerplate.springboot

management:
  endpoint:
    health:
      show-details: ALWAYS
    endpoints:
      web:
        exposure:
          include: "*"

logging:
  level:
    org.springframework: INFO
    com.farukgenc.boilerplate.springboot: INFO

## FIXME : Customize JWT token and Swagger information for your application

jwt:
  secretKey: secret
  issuer: www.farukgenc.com
  expirationMinute: 10

swagger:
  contact-name: Faruk Genc
  contact-mail: omer@farukgenc.com
  contact-url: https://farukgenc.com
  app-name: Spring Boot Boilerplate Project
  app-description: "Spring Boot Boilerplate is a starter kit. This project includes : Spring Boot(2.7.4), Spring Data JPA, Spring Validation, Spring Security + JWT Token, PostgreSQL, Mapstruct, Lombok, Swagger"
  app-version: 2.0.0
  app-license-url: https://www.apache.org/licenses/LICENSE-2.0.html
  app-license: Apache 2.0
